#!/bin/bash
# helper script to retrieve instance info say the external defined url
# this requires IAM access to ElasticBeanStalkResource(DescribeEnvironments) and EC2(DescribeTags)
# for getting EB environment info
# {
#    "Version": "2012-10-17",
#    "Statement": [
#        {
#            "Sid": "VisualEditor0",
#            "Effect": "Allow",
#            "Action": [
#                "elasticbeanstalk:DescribeEnvironmentResources",
#                "elasticbeanstalk:DescribeEnvironments",
#                "autoscaling:DescribeAutoScalingGroups"
#            ],
#            "Resource": "*"
#        }
#    ]
# }

# for retrieving EC2 instance related info
# {
#     "Version": "2012-10-17",
#     "Statement": [
#         {
#             "Sid": "VisualEditor0",
#             "Effect": "Allow",
#             "Action": "ec2:DescribeTags",
#             "Resource": "*"
#         }
#     ]
# }

# for import/re-import cert generated by letsencrypt to ACM
# {
#    "Version": "2012-10-17",
#    "Statement": [
#        {
#            "Sid": "VisualEditor0",
#            "Effect": "Allow",
#            "Action": [
#                "acm:DescribeCertificate",
#                "acm:ListCertificates",
#                "acm:ImportCertificate"
#            ],
#            "Resource": "*"
#        }
#    ]
#}

region=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')
#echo $region
export AWS_DEFAULT_REGION=$(cat /opt/elasticbeanstalk/config/ebenvinfo/region)
echo region=$region
if [ ! -d "/root/.aws" ]; then
mkdir /root/.aws
cat > /root/.aws/config  <<EOF
[default]
region = ${region}
EOF
fi
instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
echo instance_id=$instance_id
export INSTANACE_ID=$instance_id
environment_id=$(cat /opt/elasticbeanstalk/config/ebenvinfo/envid)
#environment_id=$(aws ec2 describe-tags | jq -r --arg InstanceId "$instance_id" '.Tags[] | select(.ResourceType == "instance" and .Key == "elasticbeanstalk:environment-id" and .ResourceId == $InstanceId) | .Value')
echo environment_id=$environment_id
export ENVIRONMENT_ID=$environment_id
cname=$(aws elasticbeanstalk describe-environments | jq -r --arg EnvironmentId "$environment_id" '.Environments[] | select(.EnvironmentId == $EnvironmentId) | .CNAME')
echo environment_cname=$cname
export ENVIRONMENT_CNAME=$cname
load_balancer=$(aws elasticbeanstalk describe-environment-resources --environment-id "$environment_id" | jq -r '.EnvironmentResources.LoadBalancers[0].Name')
echo $load_balancer
export LOAD_BALANCER=$load_balancer